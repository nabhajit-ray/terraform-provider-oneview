name: Terraform CICD

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    steps:

    - name: Set up Go 1.11
      uses: actions/setup-go@v1
      with:
        go-version: 1.12

    - name: Check out code into the Go module directory
      uses: actions/checkout@v1
      with:
        fetch-depth: 1
        path: go/src/github.com/HewlettPackard/terraform-provider-oneview

    - name: Go Env Variables
      run: |
        pwd
        echo ${HOME}
        echo ${GITHUB_WORKSPACE}
        echo ${GOPATH}
        echo ${GOROOT}
        echo ${GO111MODULE}
      env:
        GOPATH: /home/runner/work/HewlettPackard/terraform-provider-oneview/go

    - name: Go formatting checks
      run: if ![ -z "$(find . -type f -name "*.go" -not -path "./vendor/*" | sed "s|^\./||" | xargs gofmt -l)" ]; then exit 1; fi
    
    - name: Standard Go testing avoiding the testing of the vendor folder.
      run: |
        go vet $(go list ./... | grep -v '/vendor/')
        go test -v $(go list ./... | grep -v '/vendor/')
      env:
        GOPATH: /home/runner/work/terraform-provider-oneview/go
      
    - name: Build disabling CGO and getting a statically linked binary.
      run: |
        export GO111MODULE=off
        mkdir -p $TF_DOWNLOAD_PATH
        bash <(curl -s https://raw.githubusercontent.com/patrickdappollonio/download-terraform-binaries/master/download_terraform_binaries.sh)
        GOOS=linux go build -a -tags netgo -ldflags '-s -w' -o $TF_DOWNLOAD_PATH/linux/$BUILDNAME
      env: 
        GOPATH: /home/runner/work/terraform-provider-oneview/go
        BUILDNAME: terraform-provider-oneview
        TF_DOWNLOAD_PATH: ./bins
        GOARCH: amd64
        GO111MODULE: off
     
    - name: Create the docker image from the Dockerfile and Run a Sanity Check against an empty terraform file. When ran, it should fail if the compilation was unsuccessful.
      uses: docker/build-push-action@v2
      with:
          repository: $REPO
          push: false
          run:  docker run -it --rm=true $REPO /bin/bash -c "echo '' >> /demo.tf && cd / && /usr/local/terraform/terraform plan"  
      env: 
        GOPATH: /home/runner/work/terraform-provider-oneview/go
        BUILDNAME: terraform-provider-oneview
        TF_DOWNLOAD_PATH: ./bins
        GOARCH: amd64
        REPO: $DOCKER_USERNAME/terraform-provider-oneview
